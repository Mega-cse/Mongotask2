1.Find all the topics and tasks which are thought in the month of October
(i)db.topics.find({
  date: {
    $gte: ISODate("2020-10-01"),
    $lt: ISODate("2020-11-01")
  }
});
Answer:
{
  _id: ObjectId('66c21567c4c55c68046fb5e9'),
  topic_name: 'Introduction to MongoDB',
  date: 2020-10-05T00:00:00.000Z
}
{
  _id: ObjectId('66c21567c4c55c68046fb5ea'),
  topic_name: 'Advanced MongoDB',
  date: 2020-10-20T00:00:00.000Z
}
{
  _id: ObjectId('66c21567c4c55c68046fb5eb'),
  topic_name: 'MongoDB Features',
  date: 2020-10-25T00:00:00.000Z
}
(ii)db.tasks.find({
  date: {
    $gte: ISODate("2020-10-01"),
    $lt: ISODate("2020-11-01")
  }
});
Answer:
{
  _id: ObjectId('66c21655c4c55c68046fb5ec'),
  task_name: 'HongoDB Basics',
  user_id: ObjectId('66c210dbc4c55c68046fb5dd'),
  date: 2020-10-05T00:00:00.000Z,
  status: 'submitted'
}
{
  _id: ObjectId('66c21655c4c55c68046fb5ed'),
  task_name: 'Advanced MongoDB',
  user_id: ObjectId('66c210dbc4c55c68046fb5de'),
  date: 2020-10-28T00:00:00.000Z,
  status: 'not submitted'
}
2.Find all the company drives which appeared between 15 oct-2020 and 31-oct-2020


db.companydrives.find({
  date: {
    $gte: ISODate("2020-10-15"),
    $lt: ISODate("2020-11-01")
  }
});
Answer:
{
  _id: ObjectId('66c21d94c4c55c68046fb5ef'),
  company_name: 'Technopark',
  date: 2020-10-18T00:00:00.000Z,
  user_ids: [
    ObjectId('66c210dbc4c55c68046fb5dd'),
    ObjectId('66c210dbc4c55c68046fb5de')
  ]
}
{
  _id: ObjectId('66c21d94c4c55c68046fb5f0'),
  company_name: 'TCS',
  date: 2020-10-25T00:00:00.000Z,
  user_ids: [
    ObjectId('66c210dbc4c55c68046fb5de')
  ]
}
{
  _id: ObjectId('66c21d94c4c55c68046fb5f1'),
  company_name: 'HCL',
  date: 2020-10-30T00:00:00.000Z,
  user_ids: [
    ObjectId('66c210dbc4c55c68046fb5df')
  ]
}

3.Find all the company drives and students who are appeared for the placement.

db.companydrives.aggregate([
  {
    $lookup: {
      from: "users",
      localField: "user_ids",
      foreignField: "_id",
      as: "students"
    }
  }
]);
Answer:
{
  _id: ObjectId('66c21d94c4c55c68046fb5ef'),
  company_name: 'Technopark',
  date: 2020-10-18T00:00:00.000Z,
  user_ids: [
    ObjectId('66c210dbc4c55c68046fb5dd'),
    ObjectId('66c210dbc4c55c68046fb5de')
  ],
  students: [
    {
      _id: ObjectId('66c210dbc4c55c68046fb5dd'),
      name: 'Mega',
      email: 'mega@example.com',
      mentor_id: ObjectId('66c22031c4c55c68046fb5f4')
    },
    {
      _id: ObjectId('66c210dbc4c55c68046fb5de'),
      name: 'shivani',
      email: 'shiv@example.com',
      mentor_id: ObjectId('66c22031c4c55c68046fb5f4')
    }
  ]
}
{
  _id: ObjectId('66c21d94c4c55c68046fb5f0'),
  company_name: 'TCS',
  date: 2020-10-25T00:00:00.000Z,
  user_ids: [
    ObjectId('66c210dbc4c55c68046fb5de')
  ],
  students: [
    {
      _id: ObjectId('66c210dbc4c55c68046fb5de'),
      name: 'shivani',
      email: 'shiv@example.com',
      mentor_id: ObjectId('66c22031c4c55c68046fb5f4')
    }
  ]
}
{
  _id: ObjectId('66c21d94c4c55c68046fb5f1'),
  company_name: 'HCL',
  date: 2020-10-30T00:00:00.000Z,
  user_ids: [
    ObjectId('66c210dbc4c55c68046fb5df')
  ],
  students: [
    {
      _id: ObjectId('66c210dbc4c55c68046fb5df'),
      name: 'Dharshini',
      email: 'dharsh@example.com',
      mentor_id: ObjectId('66c22031c4c55c68046fb5f5')
    }
  ]
}

4.Find the number of problems solved by the user in codekata


db.codekata.aggregate([
  {
    $group: {
      _id: "$user_id",
      total_problems_solved: { $sum: "$problems_solved" }
    }
  }
]);
Answer:
{
  _id: ObjectId('66c210dbc4c55c68046fb5dd'),
  total_problems_solved: 50
}
{
  _id: ObjectId('66c210dbc4c55c68046fb5de'),
  total_problems_solved: 40
}
{
  _id: ObjectId('66c210dbc4c55c68046fb5df'),
  total_problems_solved: 30
}

5.Find all the mentors with who has the mentee's count more than 15

db.mentors.find({
  $expr: {
    $gt: [{ $size: "$mentee_ids" }, 15]
  }
});

Answer:
Null

6.Find the number of users who are absent and task is not submitted  between 15 oct-2020 and 31-oct-2020

db.attendance.aggregate([
  {
    $match: {
      date: { $gte: ISODate("2020-10-15"), $lt: ISODate("2020-11-01") },
      status: "absent"
    }
  },
  {
    $lookup: {
      from: "tasks",
      localField: "user_id",
      foreignField: "user_id",
      as: "tasks"
    }
  },
  {
    $unwind: "$tasks"
  },
  {
    $match: {
      "tasks.date": { $gte: ISODate("2020-10-15"), $lt: ISODate("2020-11-01") },
      "tasks.status": "not submitted"
    }
  },
  {
    $group: {
      _id: "$user_id",
      count: { $sum: 1 }
    }
  }
]);
Answer:
{
  _id: ObjectId('66c210dbc4c55c68046fb5de'),
  count: 1
}
